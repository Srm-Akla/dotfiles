# Sway-config
# Author: Sriram Akella

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
set $alt Mod1
set $term alacritty
set $monitor_big HDMI-A-1
set $monitor_small eDP-1
set $fm_tui vifm
set $fm_gui nemo
set $menu dmenu_path | dmenu | xargs swaymsg exec --

#exec_always nm-applet
exec_always gtk-settings
exec_always mako
exec waybar

#---------------------------------------------------------
# Output
#---------------------------------------------------------
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg ~/Pictures/Wallpapers/ign_dudeOnBuilding2.png fill
#output * bg ~/Pictures/Wallpapers/ign_iceberg.png stretch

# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

#---------------------------------------------------------
# Inputs
#---------------------------------------------------------
input * xkb_layout "no"

# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

font pango:Source Code Pro, 9

#---------------------------------------------------------
# sway-gaps
#---------------------------------------------------------
#smart_borders on
gaps inner 11
gaps outer 2

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' \
#               resume 'swaymsg "output * dpms on"' \
#          before-sleep '/home/thunder/.config/sway/my_swaylock.sh'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

#----------------------------------------------------
# Use amixer for volumn adjustment 
bindsym XF86AudioRaiseVolume exec amixer -q set Master 2dB+ unmute && pkill -SIGRTMIN+3 i3blocks
bindsym XF86AudioLowerVolume exec amixer -q set Master 2dB- unmute && pkill -SIGRTMIN+3 i3blocks

# Use pactl to adjust volume in PulseAudio.
#bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && $refresh_i3status
#bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && pkill -SIGRTMIN+3 i3blocks
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && pkill -SIGRTMIN+3 i3blocks

#Adjust Brightness of Backlight with light-git
bindsym XF86MonBrightnessUp exec --no-startup-id light -s sysfs/backlight/intel_backlight -A 5 && pkill -SIGRTMIN+3 i3blocks
bindsym XF86MonBrightnessDown exec --no-startup-id light -s sysfs/backlight/intel_backlight -U 5 && pkill -SIGRTMIN+3 i3blocks
 

#Access Config files
bindsym XF86Tools exec $term -e configs
bindsym XF86Search exec $term -e echo -e "\e]0;Search \a"; fzf #, floating enable

#Print Screen
bindsym --release Print exec "grim $(xdg-user-dir PICTURES)/$(date +'%m-%d-%y_%T_grim.png')"
bindsym --release $mod+Print exec grim -g "$(slurp)" "$(xdg-user-dir PICTURES)/$(date +'%m-%d-%y_%T_grim.png')"

#Lock screen
bindsym --release $mod+Escape exec swaylock
#bindsym --release $mod+XF86HomePage exec multilockscreen -l

# Start a terminal
bindsym $mod+Return exec $term

#Other 
bindsym $mod+m exec $term -t 'VIFM' -e $fm_tui

# Fuzzy finder
#bindsym $mod+Shift+p exec urxvt -e fzf

# Rofi
bindsym $mod+d exec rofi -show run 
bindsym $mod+shift+d exec rofi -show drun 
bindsym $mod+Tab exec rofi -show window

#--------------------------------------------------------
### Key bindings
#
# Basics:
#
    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    #bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    #bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

    # Powermenu
    bindsym $mod+Shift+e exec powermenu
#--------------------------------------------------------
# Moving around:
#
    # Move your focus around
    bindsym $mod+h focus left
    bindsym $mod+j focus down
    bindsym $mod+k focus up
    bindsym $mod+l focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+h move left
    bindsym $mod+Shift+j move down
    bindsym $mod+Shift+k move up
    bindsym $mod+Shift+l move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#---------------------------------------------------------
#Workspaces
#---------------------------------------------------------
# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1:α"
set $ws2 "2:β"
set $ws3 "3:γ"
set $ws4 "4:δ"
set $ws5 "5:ε"
set $ws6 "6:ζ"
set $ws7 "7:η"
set $ws8 "8:θ"
set $ws9 "9:ι"
set $ws10 "10:κ"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# Assign workspaces to monitors
workspace $ws1 output $monitor_small 
workspace $ws2 output $monitor_small 
workspace $ws3 output $monitor_small 
workspace $ws4 output $monitor_big
workspace $ws5 output $monitor_big
workspace $ws6 output $monitor_big
#workspace $ws7 output $monitor_big
#workspace $ws8 output $monitor_big
#workspace $ws9 output $monitor_big
#workspace $ws10 output $monitor_big

#---------------------------------------------------------
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
    focus_follows_mouse yes
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#---------------------------------------------------------
#Modes
#---------------------------------------------------------
# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode
        bindsym j resize shrink height 5 px or 5 ppt
        bindsym k resize grow height 5 px or 5 ppt
        bindsym h resize shrink width 5 px or 5 ppt
        bindsym l resize grow width 5 px or 5 ppt

	# Gaps

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}
bindsym $mod+r mode "resize"

mode "Apps" {

    bindsym 1 exec firefox
    bindsym s exec signal-desktop
    bindsym e exec element-desktop
    bindsym j exec flatpak run net.cozic.joplin_desktop
    bindsym t exec thunderbird
    bindsym r exec simplescreenrecorder
    bindsym m exec $fm_gui

    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+o mode "default"
}
bindsym $mod+o mode "Apps"

mode "theme" {

    bindsym d exec "$(mode_change.sh -d)"
    bindsym l exec "$(mode_change.sh -l)"

    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+t mode "default"
}
bindsym $mod+t mode "theme"

#mode "screen" {
#
#    bindsym w output eDP-1 pos 0 1200
#    bindsym s output eDP-1 pos 0 0
#    bindsym a output eDP-1 pos 1920 0
#    bindsym d output eDP-1 pos 0 0
#
#    bindsym Return mode "default"
#    bindsym Escape mode "default"
#    bindsym $mod+p mode "default"
#}
#bindsym $mod+p mode "screen"
#---------------------------------------------------------
#Applications
#---------------------------------------------------------
assign [title="Signal"] $ws4
assign [class="Element"] $ws4
assign [title="Slack"] $ws4
assign [title="Joplin"] $ws3
assign [class="Discord"] $ws4

# (No) Title Bars
default_border none

# Transparency
for_window [class=".*"] opacity 0.98
for_window [app_id=".*"] opacity 0.98
for_window [app_id="gnome-terminal-server"] opacity 1.0
for_window [class="Firefox"] opacity 0.98
for_window [class="Brave-browser"] opacity 0.98

#Floating applications
for_window [app_id="zenity"] floating enable, opacity 0.98
for_window [app_id="org.gnome.clocks"] floating enable, resize set 800 500, move position center, opacity 1.0
#for_window [title="VIFM" class="Alacritty"] floating enable, resize set 1400 900, move position center
#---------------------------------------------------------
# Colors
#---------------------------------------------------------
# set primary gruvbox colorscheme colors

include themes/dayfox.conf

# Class                 border	backgr.	text	indicator	child_border
client.focused          $blue	$blue	$bg	    $magenta	$blue
client.focused_inactive $green	$green	$bg	    $magenta	$bg
client.unfocused        $bg	    $bg	    $fg     $magenta	$bg
client.urgent           $red	$red	$bg	    $magenta	$red

client.background       $bg

#---------------------------------------------------------
# Sway-bar

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
#bar {
#	swaybar_command waybar
# 	mode dock
# 	position top
# 	modifier Mod4+Ctrl
# 	workspace_buttons yes
# 	strip_workspace_numbers yes
# 	font pango:Jetbrains Mono, 10
# 	#height 20
# 	separator_symbol "::"
# 	status_command i3blocks -c ~/.config/sway/i3blocks/i3blocks.conf
# 	#status_command i3status -c ~/.config/i3/i3status.conf
# 	colors {
# 	    background $bg
# 	    statusline $white
# 	    separator  $white
# 	    #class		border	    backgr	text
# 	    focused_workspace   $blue	    $blue	$bg
# 	    inactive_workspace  $bg	    $bg		$white
# 	    active_workspace    $bg	    $bg		$white
# 	    urgent_workspace    $red	    $red	$bg
# 	    binding_mode	$yellow	    $yellow	$bg
# 	}
#}
 
